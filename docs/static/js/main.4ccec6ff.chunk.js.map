{"version":3,"sources":["components/Results.js","components/searchGiphy.js","components/Gif.js","components/GifDisplay.js","components/GifBar.js","constants.js","components/VideosListElement.js","components/VideosList.js","App.js","serviceWorker.js","index.js"],"names":["Results","_this","this","react_default","a","createElement","className","props","searchResults","map","item","index","key","src","images","fixed_height_small","url","onClick","onGifClick","Component","searchGifs","query","callback","fetch","cors","cache","then","response","json","SearchGiphy","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSearch","state","gifs","setState","results","loading","handleChange","event","target","value","searchTimeoutId","clearTimeout","setTimeout","queryInput","React","createRef","prevProps","prevState","open","current","focus","clearInterval","intervalId","type","placeholder","onChange","ref","src_components_Results","previouslyUsedGifs","Gif","onEnd","duration","isReady","element","timeoutId","_this2","wrapper","SuperGif","gif","auto_play","playing","progressbar_height","loop_mode","loop","on_end","max_width","width","load","_this3","move_to","play","pause","slice","length","style","alt","height","defaultProps","autoPlay","GifDisplay","components_Gif","left","positionX","top","positionY","visibility","GifBar","showMarkers","timeFraction","marginLeft","SERVER_ADDRESS","VIDEO_INFO_ADDRESS","PopulatedVideoInfo","backgroundImage","videoInfo","thumbnail_url","window","location","videoId","title","VideosListElement","error","VideosListElement_PopulatedVideoInfo","VideosList","hideList","e","preventDefault","onHide","videoIds","Array","from","Set","video","filter","x","visible","href","src_components_VideosListElement","App","handleEsc","showGifSearch","handleDocumentClick","searchDiv","contains","serverGifToLocal","gifId","timestamp","fracX","fracY","serverId","_id","scale","fetchGifs","getVideoDuration","player","internalPlayer","getDuration","onPlayerReady","setInterval","timer","Promise","all","_ref","_ref2","slicedToArray","computeGifPositions","sort","b","videoDuration","onPlayerStateChange","data","videoPlaying","gifBarTimeoutId","showGifBar","onMouseMove","getCurrentTime","time","currentVideoTime","_ref3","anythingChanged","newGifs","Math","abs","assign","gifEnded","_ref4","gif_index","findIndex","stateGif","toConsumableArray","concat","toggleGifSearch","_ref5","closeGifSearch","handleCancel","newGif","addNewGif","_ref6","includes","localStorage","setItem","JSON","stringify","pauseVideo","postNewGif","gifInfo","method","headers","Content-Type","body","gifTimestamp","getRealVideoDimensions","videoRect","ReactDOM","findDOMNode","children","getBoundingClientRect","min","gifList","realDimensions","max","objectSpread","updateGifPositions","_ref7","onWindowResize","saveNewGif","id","toSave","newGifX","newGifY","newGifRnd","newGifDuration","console","log","newGifSize","urlParams","get","parse","getItem","showAddGif","showVideosList","document","addEventListener","removeEventListener","src_components_VideosList","data-toggle","YouTube","opts","playerVars","autoplay","onReady","onStateChange","lib","bounds","lockAspectRatio","onDragStop","d","y","onResize","src_components_GifBar","components_searchGiphy","components_GifDisplay","Boolean","hostname","match","URLSearchParams","search","render","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ccec6ff.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Results.css';\nimport PropTypes from 'prop-types';\n\nclass Results extends Component{\n  render() {\n    return (\n      <div className=\"Results\">\n        {this.props.searchResults.map((item, index) => (\n          <img className=\"search-result-gif\"\n            key={index} src={item.images.fixed_height_small.url}\n            onClick={() => this.props.onGifClick(item)} />\n          )\n        )}\n      </div>\n    )\n  }\n};\n\nResults.propTypes = {\n  onGifClick: PropTypes.func.isRequired,\n};\n\nexport default Results;\n","import React, { Component } from 'react';\nimport Results from './Results.js'\nimport PropTypes from 'prop-types';\nimport './searchGiphy.css';\n\nconst searchGifs = (query, callback) => {\n  // http://api.giphy.com/v1/gifs/search?q=funny+cat&api_key=dc6zaTOxFJmzC\n  const giphyApi = {\n    baseUrl: 'http://api.giphy.com',\n    searchEndpoint: '/v1/gifs/search',\n    publicApiKey: 'PrDuQjBTO5H7jg1eO1xj6sx5zGCsi4Y6',\n  }\n  const url = giphyApi.baseUrl + giphyApi.searchEndpoint +\n    '?api_key=' + giphyApi.publicApiKey +\n    '&q=' + query;\n  fetch(url, {cors: 'cors', cache: 'no-cache'})\n    .then((response) => response.json())\n    .then((json) => callback(json['data']));\n};\n\nclass SearchGiphy extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: '',\n      loading: false,\n      results: [],\n    }\n    this.queryInput = React.createRef();\n    this.searchTimeoutId = null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.open === this.props.open || !this.props.open) {\n      return;\n    }\n    this.queryInput.current.focus();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  handleSearch = () => {\n    searchGifs(this.state.query, (gifs) => {\n      // redefine our app's state to include populated response\n      this.setState({ results: gifs, loading: false });\n    });\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value });\n    if (this.searchTimeoutId === null) {\n      clearTimeout(this.searchTimeoutId);\n    }\n    if (event.target.value !== '') {\n      this.searchTimeoutId = setTimeout(this.handleSearch, 1500);\n      this.setState({ loading: true, });\n    } else {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    if (!this.props.open) {\n      return '';\n    }\n    return (\n      <div className=\"giphy-search\">\n        <div className=\"search-box\">\n          <input type=\"text\" placeholder={\"enter a search term\"} value={this.state.query}\n            onChange={this.handleChange} ref={this.queryInput} className=\"query-input\"/>\n        </div>\n        <Results searchResults={this.state.query ?\n            this.state.results : this.props.previouslyUsedGifs }\n          onGifClick={this.props.onGifClick}/>\n        <h5 className=\"search-title\">\n          Choose a gif\n          {this.state.loading ? <span className=\"loading\">  loading</span> : \"\"}\n        </h5>\n\n      </div>\n    );\n  }\n}\n\nSearchGiphy.propTypes = {\n  open: PropTypes.bool.isRequired,\n  onGifClick: PropTypes.func.isRequired,\n  closeGifSearch: PropTypes.func,\n};\n\nexport default SearchGiphy;\n","import React, { Component } from 'react';\nimport SuperGif from 'libgif';\nimport PropTypes from 'prop-types';\n\nclass Gif extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReady: false,\n    };\n\n    this.element = React.createRef();\n    this.timeoutId = null;\n  }\n\n  onEnd = () => {\n    if (this.props.duration === 'once') {\n      this.props.onEnd();\n    }\n  }\n\n  componentDidMount() {\n    this.wrapper = new SuperGif({\n      gif: this.element.current,\n      auto_play: this.props.playing,\n      progressbar_height: 0,\n      loop_mode: this.props.loop,\n      on_end: this.onEnd,\n      max_width: this.props.width,\n    });\n    this.wrapper.load(() => this.setState({isReady: true}));\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.playing === this.props.playing || !this.state.isReady) {\n      if (this.props.playing && !this.timeoutId &&\n        this.props.duration === '5sec') {\n        this.timeoutId =\n          setTimeout(() => {\n            this.props.onEnd();\n            this.timeoutId = null;\n          }, 5000);\n      }\n      return;\n    }\n    if (this.props.playing) {\n      this.wrapper.move_to(0);\n      this.wrapper.play();\n      if (this.props.duration === '5sec' && !this.timeoutId) {\n        this.timeoutId = setTimeout(() => {\n          this.props.onEnd();\n          this.timeoutId = null;\n        }, 5000);\n      }\n    } else {\n      this.wrapper.pause();\n      clearTimeout(this.timeoutId);\n    }\n  }\n\n  render() {\n    if (!this.props.src) {\n      return '';\n    }\n    const src = this.props.src.slice(0, -\"giphy.gif\".length) + '200w.gif';\n    return (\n      <div style={this.props.style} className={this.props.className}>\n        <img ref={this.element} src={src} alt={this.props.alt}\n          width={this.props.width} height={this.props.height} />\n      </div>\n    )\n  }\n}\n\nGif.defaultProps = {\n  autoPlay: false,\n  src: null,\n  style: {},\n  loop: false,\n  width: null,\n  height: null,\n  duration: 'once',\n};\n\nGif.propTypes = {\n  autoPlay: PropTypes.bool,\n  src: PropTypes.string,\n  style: PropTypes.object,\n  loop: PropTypes.bool,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  duration: PropTypes.string,\n};\n\nexport default Gif;\n","import React from 'react';\nimport Gif from './Gif';\nimport PropTypes from 'prop-types';\n\nclass GifDisplay extends React.Component {\n  render() {\n    if (!this.props.gif) {\n      return \"\";\n    }\n    return (\n      <Gif className=\"gif-player\" src={this.props.gif.url} alt=\"gif\"\n        style={{left: this.props.gif.positionX,\n          width: this.props.width,\n          top: this.props.gif.positionY,\n          visibility: this.props.playing ? 'visible' : 'hidden',\n        }}\n        playing={this.props.playing} duration={this.props.gif.duration}\n        width={this.props.width} loop={this.props.gif.duration!=='once'}\n        onEnd={this.props.onEnd}\n      />\n    );\n  }\n};\n\nGifDisplay.propTypes = {\n  playing: PropTypes.bool,\n  gif: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n}\n\nexport default GifDisplay;\n","import React from 'react';\nimport './GifBar.css';\n\nclass GifBar extends React.Component {\n  render() {\n    return (\n      <div className=\"gif-bar\">\n        { this.props.showMarkers ?\n            this.props.gifs.map((gif) =>\n              <div className=\"gif-marker\" key={gif.url+gif.timeFraction}\n                style={{marginLeft: gif.timeFraction*100 + \"%\"}} />)\n          : ''\n        }\n      </div>);\n  }\n};\n\nexport default GifBar;\n","export const SERVER_ADDRESS = \"http://gif-backend.herokuapp.com\";\nexport const VIDEO_INFO_ADDRESS = \"http://noembed.com/embed?url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D\";\n","import React, { Component } from 'react';\nimport { VIDEO_INFO_ADDRESS } from '../constants';\nimport './VideosListElement.css';\n\nclass PopulatedVideoInfo extends Component {\n  render() {\n    return (\n      <div className='video-info'\n        style={{backgroundImage: 'url('+this.props.videoInfo.thumbnail_url+')'}}\n        onClick={() => { window.location = '?id='+this.props.videoId; }}>\n        <span>\n          {this.props.videoInfo.title}\n        </span>\n      </div>\n    );\n  }\n}\n\nclass VideosListElement extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      videoInfo: null,\n      loading: true,\n    };\n  }\n\n  componentDidMount() {\n    fetch(VIDEO_INFO_ADDRESS + this.props.videoId)\n      .then(response => response.json())\n      .then(json => this.setState({videoInfo: json, loading: false}));\n  }\n\n  render() {\n    if (!this.state.loading && this.state.videoInfo.error) {\n      return '';\n    }\n    return this.state.loading ?\n      <div className='video-info'>Loading</div> :\n      <PopulatedVideoInfo videoInfo={this.state.videoInfo}\n        videoId={this.props.videoId}/>;\n  }\n}\n\nexport default VideosListElement;\n","import React, { Component } from 'react';\nimport './VideosList.css';\nimport VideosListElement from './VideosListElement';\nimport { SERVER_ADDRESS } from '../constants';\n\nclass VideosList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      videoIds: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(SERVER_ADDRESS+'/videos')\n      .then(response => response.json())\n      .then(json => {\n        this.setState({\n          videoIds: Array.from(new Set(\n            json.map((video) => video.videoId).filter(x => x))),\n          loading: false,\n        });\n      });\n  }\n\n  hideList = (e) => {\n    e.preventDefault();\n    if (this.props.onHide) {\n      this.props.onHide();\n    }\n  }\n\n  render() {\n    return (\n      <div className='videos-list'\n        style={{visibility: !this.props.visible && 'hidden'}}>\n        <button href=\"#\" onClick={this.hideList} className=\"hide-link\">\n          Hide\n        </button>\n        {this.state.loading && <div className=\"results-loading\">Loading</div>}\n        {this.state.videoIds.map((videoId) =>\n          <VideosListElement videoId={videoId} />)\n        }\n      </div>\n    );\n  }\n}\n\nexport default VideosList;\n","import React, { Component } from 'react';\nimport YouTube from 'react-youtube';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport SearchGiphy from './components/searchGiphy.js'\nimport GifDisplay from './components/GifDisplay';\nimport GifBar from './components/GifBar';\nimport VideosList from './components/VideosList';\nimport {Rnd} from 'react-rnd';\nimport { SERVER_ADDRESS, VIDEO_INFO_ADDRESS } from './constants';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      gifs: [],\n      videoId: this.props.urlParams.get(\"id\"),\n      videoInfo: null,\n      videoDuration: null,\n      videoPlaying: false,\n      newGif: null,\n      newGifX: 0, newGifY: 0,\n      newGifSize: {width: false, height: false},\n      newGifDuration: 'once',\n      previouslyUsedGifs: JSON.parse(localStorage.getItem(\"usedGifs\")) || [],\n      showGifSearch: false,\n      showAddGif: false,\n      showGifBar: true,\n      showVideosList: false,\n    };\n\n    this.player = React.createRef();\n    this.searchDiv = React.createRef();\n    this.newGifRnd = React.createRef();\n\n    document.addEventListener('mousedown', this.handleDocumentClick, false);\n    document.addEventListener('keydown', this.handleEsc, false);\n    window.addEventListener('resize', this.onWindowResize, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('mousedown', this.handleDocumentClick, false);\n    document.removeEventListener('keydown', this.handleEsc, false);\n    window.removeEventListener('resize', this.onWindowResize, false);\n    clearInterval(this.intervalId);\n  }\n\n  componentDidMount() {\n    if (!this.state.videoId) {\n      window.location = '?id=dQw4w9WgXcQ';\n      return;\n    }\n    fetch(SERVER_ADDRESS+'/videos', {\n      method: 'post', cache: 'no-cache', cors: 'cors',\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\", },\n      body: JSON.stringify({videoId: this.state.videoId}),\n    });\n    fetch(VIDEO_INFO_ADDRESS+this.state.videoId)\n      .then(response => response.json())\n      .then(json => this.setState({videoInfo: json}));\n  }\n\n  handleEsc = (event) => {\n    if (event.key === \"Escape\") {\n      this.setState({showGifSearch: false});\n    }\n  }\n\n  handleDocumentClick = (event) => {\n    if (!this.state.videoId) {\n      return;\n    }\n    if (!this.showGifSearch || this.searchDiv.current.contains(event.target)) {\n      return;\n    }\n    this.setState({showGifSearch: false});\n  }\n\n  serverGifToLocal = (gif) => {\n    return {\n      url: gif.gifId,\n      timeFraction: gif.timestamp,\n      fracX: gif.fracX, fracY: gif.fracY,\n      serverId: gif._id, scale: gif.scale,\n      duration: gif.duration,\n    };\n  }\n\n  fetchGifs = () => {\n    return fetch(SERVER_ADDRESS+'/gifs?videoId='+this.state.videoId)\n      .then((response) => response.json())\n      .then((json) => json.gifs.map(this.serverGifToLocal));\n  }\n\n  getVideoDuration = (callback) => {\n    return this.player.current.internalPlayer.getDuration();\n  }\n\n  onPlayerReady = () => {\n    this.intervalId = setInterval(this.timer, 100);\n    Promise\n      .all([this.fetchGifs(), this.getVideoDuration()])\n      .then(([gifs, duration]) => {\n        this.setState({\n          gifs: (this.computeGifPositions(gifs)\n            .sort((a, b) => (a.timeFraction - b.timeFraction))),\n          videoDuration: duration,\n        })\n      });\n  }\n\n  onPlayerStateChange = (event) => {\n    if (event.data === 1) { // playing\n      this.setState({videoPlaying: true});\n      clearTimeout(this.gifBarTimeoutId);\n      this.gifBarTimeoutId = setTimeout(\n        () => this.setState({showGifBar: false}), 4000);\n    } else {\n      this.setState({showGifBar: true, videoPlaying: false});\n      clearTimeout(this.gifBarTimeoutId);\n    }\n  }\n\n  onMouseMove = (event) => {\n    if (!this.state.videoPlaying) {\n      return;\n    }\n    clearTimeout(this.gifBarTimeoutId);\n    this.setState({showGifBar: true});\n    this.gifBarTimeoutId = setTimeout(\n        () => this.setState({showGifBar: false}), 2000);\n  }\n\n  timer = () => {\n    try {\n    this.player.current.internalPlayer\n      .getCurrentTime()\n      .then((time) => {\n        this.setState({currentVideoTime: time})\n        this.setState(({gifs, videoDuration}) => {\n          let anythingChanged = false;\n          const newGifs = gifs.map((gif) => {\n            if (Math.abs(time - gif.timeFraction*videoDuration) < 0.15) {\n              anythingChanged = true;\n              return Object.assign(gif, {playing: true})\n            }\n            return gif;\n          })\n          if (anythingChanged) { return { gifs: newGifs }; }\n        });\n      });\n    } catch (e) {\n      clearInterval(this.intervalId);\n    }\n  }\n\n  gifEnded = (gif) => {\n    this.setState(({gifs}) => {\n      const gif_index = gifs.findIndex(stateGif =>\n        stateGif.url === gif.url && stateGif.timeFraction === gif.timeFraction);\n      if (gif_index === -1) {\n        return gifs;\n      }\n      return {gifs: [\n        ...gifs.slice(0, gif_index),\n        Object.assign(gif, {playing: false}),\n        ...gifs.slice(gif_index+1)\n      ]};\n    });\n  }\n\n  toggleGifSearch = () => {\n    this.setState(({showGifSearch}) => ({showGifSearch: !showGifSearch}));\n  }\n  closeGifSearch = () => { this.setState({showGifSearch: false}); }\n  handleCancel = () => { this.setState({newGif: null, showGifSearch: false}); }\n\n  addNewGif = (gif) => {\n    this.setState(({previouslyUsedGifs}) => {\n      if (previouslyUsedGifs.includes(gif)) {\n        return { newGif: gif, showGifSearch: false };\n      } else {\n        return { newGif: gif, showGifSearch: false,\n          previouslyUsedGifs: [gif, ...previouslyUsedGifs]};\n      }\n    }, () => localStorage.setItem(\"usedGifs\",\n      JSON.stringify(this.state.previouslyUsedGifs)));\n    this.player.current.internalPlayer.pauseVideo();\n  }\n\n  postNewGif = (gifInfo) => {\n    fetch(SERVER_ADDRESS+'/gifs', {\n      method: 'post', cache: 'no-cache', cors: 'cors',\n      headers: { \"Content-Type\": \"application/json; charset=utf-8\", },\n      body: JSON.stringify({videoId: gifInfo.videoId,\n        gifId: gifInfo.url, gifTimestamp: gifInfo.timeFraction,\n        fracX: gifInfo.fracX, fracY: gifInfo.fracY, scale: gifInfo.scale,\n        duration: gifInfo.duration,\n      }),\n    });\n  }\n\n  getRealVideoDimensions = () => {\n    const videoRect = ReactDOM.findDOMNode(this.player.current).children[0]\n      .getBoundingClientRect();\n    const scale = Math.min(videoRect.width / this.state.videoInfo.width,\n      videoRect.height / this.state.videoInfo.height);\n    return { width: scale*this.state.videoInfo.width,\n      height: scale*this.state.videoInfo.height };\n  }\n\n  computeGifPositions = (gifList) => {\n    const realDimensions = this.getRealVideoDimensions();\n    const videoRect = ReactDOM.findDOMNode(this.player.current).children[0]\n      .getBoundingClientRect();\n    return gifList.map(gif => {\n      const positionX = Math.min(\n        Math.max(gif.fracX*realDimensions.width+videoRect.width/2, 0),\n        videoRect.width-100);\n      const positionY = Math.min(\n        Math.max(gif.fracY*realDimensions.height+videoRect.height/2, 0),\n        videoRect.height-100);\n      return {...gif, positionX, positionY};\n    });\n  }\n\n  updateGifPositions = () => {\n    this.setState(({gifs}) => ({ gifs: this.computeGifPositions(gifs) }));\n  }\n\n  onWindowResize = () => { this.updateGifPositions(); }\n\n  saveNewGif = () => {\n    const gif = this.state.newGif;\n    const url = `https://media.giphy.com/media/${gif.id}/giphy.gif`;\n    const time = this.state.currentVideoTime;\n    const videoId = this.state.videoId;\n    const realDimensions = this.getRealVideoDimensions();\n    const videoRect = ReactDOM.findDOMNode(this.player.current).children[0]\n      .getBoundingClientRect();\n    const fracX = (this.state.newGifX - videoRect.width/2) / realDimensions.width;\n    const fracY = (this.state.newGifY - videoRect.height/2) / realDimensions.height;\n    const scale = this.newGifRnd.current.getBoundingClientRect().width /\n      realDimensions.width;\n    const duration = this.state.newGifDuration;\n    const toSave = {url, time, videoId, fracX, fracY, scale, duration,\n      positionX: this.state.newGifX,\n      positionY: this.state.newGifY,\n      timeFraction: time/this.state.videoDuration,\n    };\n    this.postNewGif(toSave);\n    console.log(\"adding gif \" + toSave);\n    this.setState({\n      gifs: this.state.gifs.concat([toSave]),\n      newGif: null,\n      newGifX: 0, newGifY: 0,\n      newGifSize: {width: false, height: false},\n      newGifDuration: 'once',\n    });\n  }\n\n  render() {\n    if (this.state.videoId === null) {\n      return (\n        <div className=\"App\">\n          Please enter video id in the url.\n          Like this: <a href='?id=dQw4w9WgXcQ'>?id=dQw4w9WgXcQ</a>.\n        </div>\n      );\n    }\n    return (\n      <div className=\"App container\">\n        <VideosList onHide={() => this.setState({showVideosList: false})}\n          visible={this.state.showVideosList} />\n        <div className=\"header\">\n          <h1>Gifgif</h1>\n          <button className=\"show-videos-list\"\n            onClick={() => this.setState({showVideosList: true})}>\n            Other videos\n          </button>\n          {this.state.newGif ?\n              <button type=\"button\" className=\"btn btn-success save-gif-button\"\n                onClick={this.saveNewGif}>\n                Save\n              </button> \n              : ''\n          }\n          {this.state.showGifSearch || this.state.newGif ?\n              <button type=\"button\" className=\"btn btn-danger add-gif-button\"\n                onClick={this.handleCancel}>\n                Cancel\n              </button> :\n              <button type=\"button\" className=\"btn btn-primary add-gif-button\"\n                onClick={this.toggleGifSearch}>\n                Add gif\n              </button>\n          }\n          {this.state.newGif &&\n              <div className=\"choose-duration\">\n                <span className=\"play-label\">\n                  Choose place and time for the gif. Play gif</span>\n                <div className=\"btn-group btn-group-toggle\" data-toggle=\"buttons\">\n                  <button className={\"btn btn-sm btn-primary \"\n                      +(this.state.newGifDuration==='once' ? \"active\" : \"\")}\n                      onClick={()=>this.setState({newGifDuration: 'once'})}>\n                      once\n                    </button>\n                    <button className={\"btn btn-sm btn-primary\"\n                        +(this.state.newGifDuration!=='once' ? \" active\" : \"\")}\n                        onClick={()=>this.setState({newGifDuration: '5sec'})}>\n                        for 5 seconds\n                      </button>\n                    </div>\n                  </div>\n          }\n        </div>\n        <div className=\"videoFrame\" onMouseMove={this.onMouseMove}>\n          <YouTube videoId={this.state.videoId}\n            opts={{width: '100%', height: '100%', playerVars: {autoplay: 1}}}\n            ref={this.player} onReady={this.onPlayerReady}\n            onStateChange={this.onPlayerStateChange} />\n          {this.state.newGif && <div className=\"protective-screen\"/>}\n          {this.state.newGif ?\n              <Rnd bounds=\"parent\" lockAspectRatio={true}\n                onDragStop={(e, d) => this.setState({newGifX: d.x, newGifY: d.y})}\n                onResize={(e,d,ref) =>\n                    this.setState({newGifSize: ref.getBoundingClientRect()})}>\n                <img src={this.state.newGif.images.fixed_height_small.url}\n                  style={{width: this.state.newGifSize.width || \"100%\",\n                    height: this.state.newGifSize.height || \"100%\"\n                  }} ref={this.newGifRnd} />\n              </Rnd>\n              : ''\n          }\n          <GifBar gifs={this.state.gifs} showMarkers={this.state.showGifBar}/>\n          <div ref={this.searchDiv}>\n            <SearchGiphy onGifClick={this.addNewGif}\n              previouslyUsedGifs={this.state.previouslyUsedGifs}\n              open={this.state.showGifSearch} closeGifSearch={this.closeGifSearch}/>\n          </div>\n          {this.state.gifs.map(gif =>\n            <GifDisplay gif={gif} key={gif.url+gif.timeFraction}\n              width={gif.scale*this.getRealVideoDimensions().width || 200}\n              playing={gif.playing} onEnd={() => this.gifEnded(gif)}/>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst urlParams = new URLSearchParams(window.location.search);\nReactDOM.render(<App urlParams={urlParams} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}